{"version":3,"sources":["store/index.ts","utils/format-time.ts","components/PlayerPanel.tsx","components/TimeInput.tsx","components/CutItem.tsx","components/CutsPanel.tsx","App.tsx","serviceWorker.ts","index.tsx","components/CutsPanel.module.sass","components/CutItem.module.sass","components/PlayerPanel.module.sass","App.module.css"],"names":["configure","enforceActions","store","makeObservable","this","cuts","reduce","duration","cut","endTime","startTime","observable","computed","pad","x","formatTime","long","hours","Math","floor","mins","seconds","millis","time","observer","ref","useRef","useState","playing","setPlaying","position","setPosition","useEffect","stopped","requestAnimationFrame","getPosition","current","getCurrentTime","Grid","className","styles","header","searchLine","container","direction","justify","TextField","fullWidth","placeholder","value","url","onChange","e","target","onPlay","onPause","controls","config","youtube","playerVars","item","lg","Button","variant","disableElevation","onClick","currentCut","color","TimeInput","props","formattedValue","Col","timeInput","label","InputGroup","Prepend","stepBtn","FormControl","input","console","log","Append","idx","block","alignItems","play","rightBlock","remove","fontSize","timeTotal","timeRow","alignContent","buttons","xs","push","map","key","infoLine","trailerLength","length","theme","createMuiTheme","palette","primary","main","secondary","App","ThemeProvider","Container","Row","rightCol","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message","module","exports"],"mappings":"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","file":"static/js/main.ca0069a3.chunk.js","sourcesContent":["import { observable, makeObservable, configure, computed } from 'mobx'\n\nconfigure({ enforceActions: 'never' })\n\nexport interface Cut {\n\tstartTime: number\n\tendTime: number\n}\n\nclass Store {\n\t@observable url: string = 'https://www.youtube.com/watch?v=jrOxsjdeccw'\n\t@observable currentCut: Cut = {\n\t\tstartTime: 0,\n\t\tendTime: 0,\n\t}\n\n\t@observable cuts: Cut[] = [\n\t\t{\n\t\t\tstartTime: 0,\n\t\t\tendTime: 0,\n\t\t},\n\t]\n\n\t@computed get trailerLength() {\n\t\treturn this.cuts.reduce((duration, cut) => duration + cut.endTime - cut.startTime, 0)\n\t}\n\n\tconstructor() {\n\t\tmakeObservable(this)\n\t}\n}\n\nconst store = new Store()\n\nexport default store\n","function pad(x: number) {\n\tif (x < 10) return `0${x}`\n\treturn x\n}\n\nexport function formatTime(duration: number | null, long = false) {\n\tif (!duration) return `00:00:00`\n\tconst hours = Math.floor(duration / 60 / 60)\n\tconst mins = Math.floor(duration / 60)\n\tconst seconds = Math.floor(duration % 60)\n\tconst millis = Math.floor((duration - Math.floor(duration)) * 100)\n\tlet time = `${pad(hours)}:${pad(mins)}:${pad(seconds)}`\n\tif (long) time = `${time}:${pad(millis)}`\n\treturn time\n}\n","import React, { useEffect, useRef, useState } from 'react'\nimport { observer } from 'mobx-react'\nimport store from '../store'\nimport ReactPlayer from 'react-player'\nimport { formatTime } from '../utils/format-time'\nimport { Button, Grid, TextField } from '@material-ui/core'\nimport styles from './PlayerPanel.module.sass'\n\nfunction PlayerPanel() {\n\tconst ref = useRef<ReactPlayer>(null)\n\tconst [playing, setPlaying] = useState(true)\n\tconst [position, setPosition] = useState<number | null>(null)\n\n\tuseEffect(() => {\n\t\tlet stopped = false\n\t\tfunction getPosition() {\n\t\t\tif (stopped || !ref.current) return\n\t\t\tsetPosition(ref.current.getCurrentTime())\n\t\t\trequestAnimationFrame(getPosition)\n\t\t}\n\t\trequestAnimationFrame(getPosition)\n\t\treturn () => {\n\t\t\tstopped = true\n\t\t}\n\t}, [])\n\n\tfunction startFrame() {\n\t\tconst time = ref.current?.getCurrentTime()!\n\t\tstore.currentCut = store.currentCut || {\n\t\t\tstartTime: 0,\n\t\t\tendTime: 0,\n\t\t}\n\t\tstore.currentCut.startTime = time\n\t\tif (store.currentCut.endTime < time) store.currentCut.endTime = time + 5\n\t}\n\n\tfunction endFrame() {\n\t\tconst time = ref.current?.getCurrentTime()!\n\t\tstore.currentCut = store.currentCut || {\n\t\t\tstartTime: 0,\n\t\t\tendTime: 0,\n\t\t}\n\t\tstore.currentCut.endTime = time\n\t\tif (store.currentCut.startTime > time) store.currentCut.startTime = time - 5\n\t}\n\n\treturn (\n\t\t<>\n\t\t\t<Grid className={styles.header}>eyemo</Grid>\n\t\t\t<Grid className={styles.searchLine} container direction='column' justify={'flex-end'}>\n\t\t\t\t<TextField\n\t\t\t\t\tfullWidth\n\t\t\t\t\tplaceholder='Copy YouTube url'\n\t\t\t\t\tvalue={store.url}\n\t\t\t\t\tonChange={(e) => (store.url = e.target.value)}\n\t\t\t\t/>\n\t\t\t</Grid>\n\t\t\t<Grid className='padded'>\n\t\t\t\t<ReactPlayer\n\t\t\t\t\tref={ref}\n\t\t\t\t\tplaying={playing}\n\t\t\t\t\turl={store.url}\n\t\t\t\t\t//onProgress={(e) => console.log(e)}\n\t\t\t\t\tonPlay={() => setPlaying(true)}\n\t\t\t\t\tonPause={() => setPlaying(false)}\n\t\t\t\t\tcontrols={true}\n\t\t\t\t\tconfig={{\n\t\t\t\t\t\tyoutube: {\n\t\t\t\t\t\t\tplayerVars: {\n\t\t\t\t\t\t\t\t//autoplay: 1,\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t}}\n\t\t\t\t/>\n\t\t\t</Grid>\n\t\t\t<Grid justify='center' container>\n\t\t\t\t{formatTime(position, true)}\n\t\t\t</Grid>\n\t\t\t<Grid container>\n\t\t\t\t<Grid className='padded' item lg>\n\t\t\t\t\t<Button variant='contained' disableElevation fullWidth onClick={startFrame} color='primary'>\n\t\t\t\t\t\tStart of frame\n\t\t\t\t\t</Button>\n\t\t\t\t</Grid>\n\t\t\t\t<Grid className='padded' item lg>\n\t\t\t\t\t<Button variant='contained' disableElevation onClick={endFrame} fullWidth color='primary'>\n\t\t\t\t\t\tEnd of frame\n\t\t\t\t\t</Button>\n\t\t\t\t</Grid>\n\t\t\t</Grid>\n\t\t\t<Grid>\n\t\t\t\t<Grid className='padded'>\n\t\t\t\t\t<Button\n\t\t\t\t\t\tvariant='contained'\n\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\tdisableElevation\n\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t//ref.current?.seekTo(3)\n\t\t\t\t\t\t\tsetPlaying(!playing)\n\t\t\t\t\t\t}}\n\t\t\t\t\t>\n\t\t\t\t\t\tContinue Watching\n\t\t\t\t\t</Button>\n\t\t\t\t</Grid>\n\t\t\t</Grid>\n\t\t</>\n\t)\n}\n\nexport default observer(PlayerPanel)\n","import React, { ChangeEvent } from 'react'\nimport styles from './CutsPanel.module.sass'\nimport { Button, Col, FormControl, InputGroup } from 'react-bootstrap'\nimport { formatTime } from '../utils/format-time'\n\ninterface Props {\n\tvalue: number | null\n\tlabel: string\n\tonChange: (value: number) => void\n}\n\nexport default function TimeInput(props: Props) {\n\tconst formattedValue = formatTime(props.value)\n\n\tfunction onChange(e: ChangeEvent) {\n\t\tconsole.log('--> ')\n\t}\n\treturn (\n\t\t<Col className={styles.timeInput}>\n\t\t\t<div className={styles.label}>{props.label}</div>\n\t\t\t<InputGroup>\n\t\t\t\t<InputGroup.Prepend>\n\t\t\t\t\t<Button variant='outline-dark' className={styles.stepBtn}>\n\t\t\t\t\t\t-\n\t\t\t\t\t</Button>\n\t\t\t\t</InputGroup.Prepend>\n\t\t\t\t<FormControl className={styles.input} value={formattedValue} onChange={onChange} />\n\t\t\t\t<InputGroup.Append>\n\t\t\t\t\t<Button variant='outline-dark' className={styles.stepBtn}>\n\t\t\t\t\t\t+\n\t\t\t\t\t</Button>\n\t\t\t\t</InputGroup.Append>\n\t\t\t</InputGroup>\n\t\t</Col>\n\t)\n}\n","import React from 'react'\nimport { observer } from 'mobx-react'\nimport { Cut } from '../store'\nimport styles from './CutItem.module.sass'\nimport { Button, Grid } from '@material-ui/core'\nimport PlayArrowIcon from '@material-ui/icons/PlayArrow'\nimport TimeInput from './TimeInput'\nimport { formatTime } from '../utils/format-time'\nimport CloseIcon from '@material-ui/icons/Close'\n\ninterface Props {\n\tcut: Cut\n\tidx: number\n}\n\nfunction CutItem(props: Props) {\n\treturn (\n\t\t<Grid container className={styles.container}>\n\t\t\t<Grid item className={styles.idx}>\n\t\t\t\t{props.idx + 1}\n\t\t\t</Grid>\n\t\t\t<Grid className={styles.block} container lg>\n\t\t\t\t<Grid item alignItems='stretch'>\n\t\t\t\t\t<Button className={styles.play}>\n\t\t\t\t\t\t<PlayArrowIcon />\n\t\t\t\t\t</Button>\n\t\t\t\t</Grid>\n\t\t\t\t<Grid item lg>\n\t\t\t\t\t<TimeInput value={props.cut.startTime} label='Start time' onChange={() => {}} />\n\t\t\t\t</Grid>\n\t\t\t\t<Grid item lg>\n\t\t\t\t\t<TimeInput value={props.cut.endTime} label='Start time' onChange={() => {}} />\n\t\t\t\t</Grid>\n\t\t\t\t<Grid item className={styles.rightBlock}>\n\t\t\t\t\t<CloseIcon className={styles.remove} fontSize='small' />\n\t\t\t\t\t<div className={styles.timeTotal}>{formatTime(props.cut.endTime - props.cut.startTime)}</div>\n\t\t\t\t</Grid>\n\t\t\t</Grid>\n\t\t</Grid>\n\t)\n}\n\nexport default observer(CutItem)\n","import React from 'react'\nimport store from '../store'\nimport TimeInput from './TimeInput'\nimport styles from './CutsPanel.module.sass'\nimport { observer } from 'mobx-react'\nimport CutItem from './CutItem'\nimport { Button, Grid } from '@material-ui/core'\nimport { formatTime } from '../utils/format-time'\n\nexport function CutsPanel() {\n\tfunction changeStart() {}\n\n\tfunction changeEnd() {}\n\n\tfunction play() {}\n\n\tfunction add() {\n\t\tif (!store.currentCut) return\n\t\tstore.cuts.push(store.currentCut)\n\t\tstore.currentCut = {\n\t\t\tstartTime: 0,\n\t\t\tendTime: 0,\n\t\t}\n\t}\n\n\treturn (\n\t\t<>\n\t\t\t<Grid className={styles.header} />\n\t\t\t<Grid container justify='center' className={styles.timeRow} alignContent='flex-end'>\n\t\t\t\t<Grid item>\n\t\t\t\t\t<TimeInput value={store.currentCut.startTime} label='Start time' onChange={changeStart} />\n\t\t\t\t</Grid>\n\t\t\t\t<Grid item>\n\t\t\t\t\t<TimeInput value={store.currentCut?.endTime} label='End time' onChange={changeEnd} />\n\t\t\t\t</Grid>\n\t\t\t\t<Grid item className={styles.buttons} xs>\n\t\t\t\t\t<Button variant='outlined' disableElevation onClick={play}>\n\t\t\t\t\t\tPlay\n\t\t\t\t\t</Button>\n\t\t\t\t\t<Button variant='contained' color='primary' disableElevation onClick={add}>\n\t\t\t\t\t\tAdd\n\t\t\t\t\t</Button>\n\t\t\t\t</Grid>\n\t\t\t</Grid>\n\t\t\t<Grid container direction='column'>\n\t\t\t\t{store.cuts.map((cut, idx) => (\n\t\t\t\t\t<CutItem key={idx} idx={idx} cut={cut} />\n\t\t\t\t))}\n\t\t\t</Grid>\n\t\t\t<Grid container className={styles.infoLine} item>\n\t\t\t\t<Grid item lg>\n\t\t\t\t\tTrailer duration: {formatTime(store.trailerLength)}\n\t\t\t\t</Grid>\n\t\t\t\t<Grid item lg>\n\t\t\t\t\tNumber of frames: {store.cuts.length}\n\t\t\t\t</Grid>\n\t\t\t</Grid>\n\t\t</>\n\t)\n}\n\nexport default observer(CutsPanel)\n","import React from 'react'\nimport './App.css'\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport Row from 'react-bootstrap/Row'\nimport Col from 'react-bootstrap/Col'\nimport PlayerPanel from './components/PlayerPanel'\nimport CutsPanel from './components/CutsPanel'\nimport styles from './App.module.css'\nimport { Container, createMuiTheme, ThemeProvider } from '@material-ui/core'\n\nconst theme = createMuiTheme({\n\tpalette: {\n\t\tprimary: {\n\t\t\tmain: '#4d6ddf',\n\t\t},\n\t\tsecondary: {\n\t\t\tmain: '#314eb7',\n\t\t},\n\t},\n})\n\nfunction App() {\n\treturn (\n\t\t<ThemeProvider theme={theme}>\n\t\t\t<Container>\n\t\t\t\t<Row>\n\t\t\t\t\t<Col>\n\t\t\t\t\t\t<PlayerPanel />\n\t\t\t\t\t</Col>\n\t\t\t\t\t<Col className={styles.rightCol}>\n\t\t\t\t\t\t<CutsPanel />\n\t\t\t\t\t</Col>\n\t\t\t\t</Row>\n\t\t\t</Container>\n\t\t</ThemeProvider>\n\t)\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"timeRow\":\"CutsPanel_timeRow__S7itQ\",\"timeInput\":\"CutsPanel_timeInput__2Qrs0\",\"input\":\"CutsPanel_input__2-BNw\",\"stepBtn\":\"CutsPanel_stepBtn__2UpLP\",\"buttons\":\"CutsPanel_buttons__1KZL7\",\"infoLine\":\"CutsPanel_infoLine__H7V1j\",\"header\":\"CutsPanel_header__1Yli3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"CutItem_container__2rPPd\",\"block\":\"CutItem_block__109Jg\",\"idx\":\"CutItem_idx__AiXXt\",\"play\":\"CutItem_play__3Lhqn\",\"rightBlock\":\"CutItem_rightBlock__1BaAB\",\"remove\":\"CutItem_remove__OqVCk\",\"timeTotal\":\"CutItem_timeTotal__HHslm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"searchLine\":\"PlayerPanel_searchLine__lHiKN\",\"header\":\"PlayerPanel_header__3Ofwm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"rightCol\":\"App_rightCol__2GgY6\"};"],"sourceRoot":""}